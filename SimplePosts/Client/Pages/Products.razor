@page "/products"

@inject HttpClient Http

<div class="main overflow-auto">
    <div class="content px-4">
        <button class="btn btn-info btn-lg" @onclick="CreateClick">+</button>
        <div class="row">
            <table class="table table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th class="text-center">Имя</th>
                        <th class="text-center">Стоимость</th>
                        <th class="text-center">Количество</th>
                        <th class="text-center">Описание</th>
                        <th class="text-center">Редактировать</th>
                        <th class="text-center">Удалить</th>
                    </tr>
                </thead>
                <tbody>
                    @if (ProductList.Any())
                    {
                        @foreach (Product product in ProductList)
                        {
                            @*<tr @onclick="(() => SetProductForUpdate(product))">*@
                            <tr>
                                <td class="text-center">@product.Name</td>
                                <td class="text-center">@product.Price</td>
                                <td class="text-center">@product.Quantity</td>
                                <td class="text-center">@product.Description</td>
                                <td class="text-center"><button class="btn btn-info" @onclick="(() => SetProductForUpdate(product))">Редактировать</button></td>
                                <td class="text-center"><button class="btn btn-danger" @onclick="(() => DeleteProduct(product.Id))">Удалить</button></td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr><td colspan="6"><strong>No products available</strong></td></tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <ProductModal @bind-IsOpen="IsOpen" @bind-ProductList="ProductList" Model="@(new FormModel { Heading = "Добавление продукта", Product=CurrentProduct, ButtonText = "Создать" })"></ProductModal>
</div>

@code {
    bool IsOpen { get; set; }

    void CreateClick()
    {
        IsOpen = true;
    }

    List<Product> ProductList = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        await RefreshProducts();
    }

    private async Task RefreshProducts()
    {
        ProductList = await Http.GetFromJsonAsync<List<Product>>("products");
    }

    Product CurrentProduct = new Product();

    private void SetProductForUpdate(Product product)
    {
        CurrentProduct = product;

        CreateClick();
    }

    private async Task DeleteProduct(int id)
    {
        await Http.DeleteAsync($"products/{id}");
        ProductList.Remove(ProductList.FirstOrDefault(p => p.Id == id));
    }
}
